<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name/>
        <active>true</active>
        <client>true</client>
        <comments/>
        <condition>gs.hasRole("x_manen_assist.admin") || gs.hasRole("x_manen_assist.user") || gs.hasRole("admin") || gs.hasRole("x_manen_assist.moderator")</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <hint/>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <name>Screen Sharing</name>
        <onclick>shareMyScreen()</onclick>
        <order>1</order>
        <script><![CDATA[function shareMyScreen() {
	try { 
		var sysId = typeof rowSysId == 'undefined' ? gel('sys_uniqueValue').value : rowSysId;
		var incident_detail = getIncidentRecord();
		getSessionAPI(incident_detail);
	}
	catch(ex) {
		var message = ex.getMessage();
		console.log(message);
	}
}

function getIncidentRecord(sys_id) {
	var incident_detail = {};
	
	// Technician Name using g_user
	var technician_name = encodeURIComponent(g_user.fullName);
	incident_detail.agent_name = technician_name;
	incident_detail.case_id = sys_id;
	
	// Getting Incodent Records
	var incident_record = new GlideRecord('incident');
	incident_record.addQuery("sys_id",sys_id);
	incident_record.query();
	incident_record.next();
	
	if(incident_record.number!=undefined){
		incident_detail.mail_subject = incident_record.number;
	}
	if(incident_record.short_description!=undefined){
		incident_detail.mail_content = encodeURIComponent(incident_record.short_description);
	}
	
	var caller_id = incident_record.caller_id;
	// Getting Caller Records
	if(caller_id!=undefined){
		var caller_record = new GlideRecord('sys_user');
		caller_record.addQuery("sys_id", caller_id);
		caller_record.query();
		caller_record.next();
		incident_detail.customer_email = encodeURIComponent(caller_record.email);
		incident_detail.customer_name = encodeURIComponent(caller_record.name);
	}

	// Getting Department Records
	var department_record = new GlideRecord('cmn_department');
	department_record.addQuery("sys_id", g_user.departmentID);
	department_record.query();
	department_record.next();
	incident_detail.department = encodeURIComponent(department_record.description);
	
	
	if(incident_detail.ticket_subject!=undefined && incident_detail.ticket_subject.length>250){
		incident_detail.ticket_subject= incident_detail.ticket_subject.substr(0,200);
	}
	if(incident_detail.customer_name!=undefined && incident_detail.customer_name.length>25){
		incident_detail.customer_name=incident_detail.customer_name.substr(0,25);
	}
	
	// Getting system properties
	var rec = new GlideRecord('sys_properties');
	rec.addQuery('name', 'x_manen_assist.api_key');
	rec.query();
	if(rec.next()){
		incident_detail.api_key = rec.value;
	}
	rec = new GlideRecord('sys_properties');
	rec.addQuery('name', 'x_manen_assist.is_eu');
	rec.query();
	if(rec.next()){
		var flag = rec.value;
		if(flag){
			incident_detail.domain = "eu";
		}else{
			incident_detail.domain = "com";
		}
	}

	// Getting Subdomain from window location
	var subdomain = window.location.host;
	incident_detail.subdomain = subdomain.replace(".service-now.com","");
	
	return incident_detail;
}

function restSessionAPIHandler(response) { 
	var sessionResp = response.responseXML.getElementsByTagName('session_api');
	for (var i = 0; i < sessionResp.length; i++) {
	    var sessionJSONResp = JSON.parse(sessionResp[i].getAttribute('value'));
		console.log(sessionJSONResp);
	}
	
}

function getSessionAPI(incident_detail){
	
	incident_detail.type = 'rs';
	console.log(incident_detail);
	
	var inc = new GlideAjax("x_manen_assist.AssistRestAPIHandler");
	inc.addParam("sysparm_name","getSessionAPI");
	inc.addParam("incident_detail",JSON.stringify(incident_detail));
	
	inc.getXML(restSessionAPIHandler);
}]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-11-14 10:12:38</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>46e887e3db96cb40360eda11cf961945</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Screen Sharing</sys_name>
        <sys_overrides/>
        <sys_package display_value="Assist" source="x_manen_assist">2ef5cf23db96cb40360eda11cf9619f3</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Assist">2ef5cf23db96cb40360eda11cf9619f3</sys_scope>
        <sys_update_name>sys_ui_action_46e887e3db96cb40360eda11cf961945</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-11-25 16:55:52</sys_updated_on>
        <table>incident</table>
        <ui11_compatible>false</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
